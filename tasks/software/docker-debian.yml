- name: Install docker dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - libffi-dev
    - libssl-dev
    - python3-dev
    - python3
    - python3-pip

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  ansible.builtin.apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu focal stable
    state: present

# - name: Update apt and install docker-ce
#   apt:
#     name: docker-ce
#     state: latest
#     update_cache: true
- name: Install Docker Components
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Install Docker Module for Python
  ansible.builtin.pip:
    name: docker
    state: present

- name: Ensure group "docker" exists with correct gid
  ansible.builtin.group:
    name: docker
    state: present

- name: Add remote "{{ docker_user }}" user to "docker" group
  ansible.builtin.user:
    name: "{{ docker_user }}"
    group: docker
    shell: /bin/bash
    append: true
  tags:
    - docker
# - name: Create Docker Compose plugins directory
#     ansible.builtin.file:
#       path: /home/{{ docker_user }}/.docker/cli-plugins/
#       state: directory
#       owner: "{{ docker_user }}"
#       group: "{{ docker_user }}"
#       mode: 0750
#     tags:
#       - docker

  # - name: Install Docker Compose
  #   ansible.builtin.pip:
  #     name: docker-compose 
